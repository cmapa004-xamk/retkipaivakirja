{"version":3,"sources":["components/OmatRetket.js","components/kuvat/karitunturi.jpg","components/kuvat/leivonmaki.jpg","components/kuvat/lemmenjoki.jpg","components/kuvat/liesjarvi.jpg","components/kuvat/martimoaapa.jpg","components/kuvat/pienikarhu.jpg","components/kuvat/repovesi.jpg","components/kuvat/riisitunturi.jpg","components/kuvat/salamajarvi.jpg","components/kuvat/syote.jpg","components/LisaaRetki.js","components/RetkenTiedot.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","kehys","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","ruudukko","width","kuvake","color","OmatRetket","props","tyylit","useState","nayta","setNayta","infoSivulle","setSivu","className","FormControlLabel","control","Checkbox","onChange","e","label","GridList","cellHeight","retket","sort","a","b","alku","map","retki","idx","tahtia","GridListTile","src","kuva","alt","reitti","GridListTileBar","title","subtitle","Rating","name","size","value","readOnly","actionIcon","IconButton","onClick","setLisatiedot","valikko","marginBottom","float","LisaaRetki","kuvanValinta","useRef","paikkakentta","reittikentta","kmkentta","tahdet","setTahdet","aloitus","setAloitus","lopetus","setLopetus","utils","DateFnsUtils","locale","fi","onSubmit","preventDefault","uusiRetkiApu","Date","getTime","loppu","paikka","current","matka","setRetket","alert","DateTimePicker","inputVariant","cancelLabel","ampm","disableFuture","format","style","TextField","variant","fullWidth","inputRef","type","FormControl","InputLabel","marginLeft","Select","MenuItem","karitunturi","leivonmaki","lemmenjoki","liesjarvi","martimoaapa","pienikarhu","repovesi","riisitunturi","salamajarvi","syote","Box","component","borderColor","Typography","arvostelu","Button","RetkenTiedot","List","ListItem","ListItemText","primary","lisatiedot","secondary","marginTop","App","sivu","maakuntaData","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","Container","maxWidth","TabContext","AppBar","position","Tabs","uusiSivu","centered","Tab","TabPanel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04877ec3.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport {Checkbox, FormControlLabel, GridList, GridListTile, GridListTileBar, IconButton } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n\n    kehys: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n\n    ruudukko: {\n      width: 500\n    },\n\n    kuvake: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    }\n\n  }));\n\n// Sovelluksen aloitusnäkymässä on listattuna käyttäjät tallentamat retket\n\nfunction OmatRetket(props) {\n\n    const tyylit = useStyles();\n    const [nayta, setNayta] = useState(false);\n\n    const infoSivulle = () => {\n        props.setSivu(\"3\");\n    }\n    \n    return (\n\n        <div className={tyylit.kehys}>\n\n            {/* Käyttäjä voi halutessa valita näkymään vain retket, joiden arvioksi on annettu viisi tähteä */}           \n            <FormControlLabel\n                control={<Checkbox onChange={ (e) => { setNayta(!nayta); }} /> } \n                label=\"Näytä vain viiden tähden retket\"/>\n        \n           {/* Retket listataan kuvaruudukkoon järjestyksessä uusimmasta vanhimpaan. Jokaisesta listatusta retkestä näkyy siis lisätty kuva,\n           reitin nimi sekä retkelle annettu arvio. info-kuvaketta painamalla avautuu näkymä, jossa on retken kaikki tiedot. */} \n            <GridList cellHeight={180} className={tyylit.ruudukko}>\n                {props.retket.sort((a, b) => b.alku - a.alku).map((retki, idx) => (\n\n                // Jos käyttäjä on ruksannut checkboxin, listataan vain retket, joilla on annettu arvioksi viisi tähteä.\n                (nayta)\n                ? (retki.tahtia === 5)\n                    ? <GridListTile key={idx}>\n                        <img src={retki.kuva} alt={retki.reitti} />\n                        <GridListTileBar\n                            title={retki.reitti}\n                            subtitle={\n                                <Rating \n                                name=\"read-only\"\n                                size=\"small\"\n                                value={retki.tahtia}\n                                readOnly\n                                />}\n                            actionIcon={\n                                <IconButton\n                                    className={tyylit.kuvake}\n                                    onClick={ () => {\n                                        props.setLisatiedot(retki)\n                                        infoSivulle() }}>\n                                <InfoIcon />\n                                </IconButton>               \n                            }             \n                        />           \n                      </GridListTile>\n                    : null\n\n                // Jos käyttäjä ei ole ruksannut laatikkoa, kaikki retket listataan.              \n                : <GridListTile key={idx}>\n                    <img src={retki.kuva} alt={retki.reitti} />\n                    <GridListTileBar\n                        title={retki.reitti}\n                        subtitle={\n                            <Rating \n                            name=\"read-only\"\n                            size=\"small\"\n                            value={retki.tahtia}\n                            readOnly\n                            />}\n                        actionIcon={\n                            <IconButton\n                                className={tyylit.kuvake}\n                                onClick={ () => {\n                                    props.setLisatiedot(retki)\n                                    infoSivulle() }}>\n                            <InfoIcon />\n                            </IconButton>               \n                        }             \n                    />           \n                </GridListTile>\n                \n                ))}\n\n            </GridList>\n        </div>\n    )\n}\n\nexport default OmatRetket;","export default __webpack_public_path__ + \"static/media/karitunturi.a862a215.jpg\";","export default __webpack_public_path__ + \"static/media/leivonmaki.4e9df2fe.jpg\";","export default __webpack_public_path__ + \"static/media/lemmenjoki.762c5c93.jpg\";","export default __webpack_public_path__ + \"static/media/liesjarvi.fd59967e.jpg\";","export default __webpack_public_path__ + \"static/media/martimoaapa.b8e01c3d.jpg\";","export default __webpack_public_path__ + \"static/media/pienikarhu.3f92d28e.jpg\";","export default __webpack_public_path__ + \"static/media/repovesi.ca949503.jpg\";","export default __webpack_public_path__ + \"static/media/riisitunturi.16fd9a62.jpg\";","export default __webpack_public_path__ + \"static/media/salamajarvi.bb9fb512.jpg\";","export default __webpack_public_path__ + \"static/media/syote.0294fd9b.jpg\";","import {FormControl, InputLabel, Select, MenuItem, Button, TextField, Box, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'; \nimport { Rating } from \"@material-ui/lab\";\nimport { useRef, useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { fi } from 'date-fns/locale';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\n\nimport karitunturi from './kuvat/karitunturi.jpg';\nimport leivonmaki from './kuvat/leivonmaki.jpg';\nimport lemmenjoki from './kuvat/lemmenjoki.jpg';\nimport liesjarvi from './kuvat/liesjarvi.jpg';\nimport martimoaapa from './kuvat/martimoaapa.jpg';\nimport pienikarhu from './kuvat/pienikarhu.jpg';\nimport repovesi from './kuvat/repovesi.jpg';\nimport riisitunturi from './kuvat/riisitunturi.jpg';\nimport salamajarvi from './kuvat/salamajarvi.jpg';\nimport syote from './kuvat/syote.jpg'\n\nconst useStyles = makeStyles(() => ({\n    valikko : {     \n                marginBottom: 10,\n                width: \"49%\",\n                float: \"right\"\n              }\n    \n  }));\n\n/* Näkymässä käyttäjä voi lisätä tehdyn retken. Kaikki syötettävät tiedot ovat pakollisia. Tässä versiossa käyttäjä ei pysty\nlataamaan kuvia omalta tietokoneelta, vaan sovellukseen on tuotu muutama valokuva, joista käyttäjä voi valita alasvetovalikosta */\n\nfunction LisaaRetki(props) {\n\n    const tyylit = useStyles();\n\n    const kuvanValinta = useRef();\n    const paikkakentta = useRef();\n    const reittikentta = useRef();\n    const maakuntakentta = useRef();\n    const kmkentta = useRef();\n    const [tahdet, setTahdet] = useState();\n    const [aloitus, setAloitus] = useState();\n    const [lopetus, setLopetus] = useState();\n\n\n    // Lomakekäsittelijä tallentaa uudet retken tiedot\n    const kasitteleLomake = (e) => {\n  \n      e.preventDefault();\n  \n      let uusiRetkiApu = {\n                            alku : new Date(aloitus).getTime(),\n                            loppu : new Date(lopetus).getTime(),\n                            paikka : paikkakentta.current.value,\n                            reitti : reittikentta.current.value,\n                            matka : kmkentta.current.value,\n                            kuva : kuvanValinta.current.value,\n                            tahtia : tahdet,\n      }\n\n      // Kaikki syötettävät tiedot ovat pakollisia, ja jos jotain puuttuu, käyttäjä saa ilmoituksen\n      if (!uusiRetkiApu.alku\n        || !uusiRetkiApu.loppu\n        || !uusiRetkiApu.paikka\n        || !uusiRetkiApu.reitti\n        || !uusiRetkiApu.matka\n        || !uusiRetkiApu.kuva\n        || !uusiRetkiApu.tahtia) {\n        alert(\"Lisää puuttuvat tiedot! Kaikki tiedot ovat pakollisia.\");\n      }\n      else {\n        props.setRetket([...props.retket, uusiRetkiApu]);\n        props.setSivu(\"1\");\n      }\n\n    }\n  \n    // Lomake\n    return (\n\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={fi}>\n\n            <form onSubmit={kasitteleLomake}>\n\n                {/* Retken aloitus ja lopetusajat valitaan DateTimePickerillä */}\n                <DateTimePicker\n                    label=\"Retken aloitus\"\n                    inputVariant=\"outlined\"\n                    cancelLabel=\"Peruuta\"\n                    ampm={false}\n                    value={aloitus}\n                    onChange={setAloitus}\n                    disableFuture={true}\n                    format=\"d.M.y HH:mm\"\n                    style={{marginBottom: 10, width: \"49%\"}}\n                />\n                <DateTimePicker\n                    label=\"Retken lopetus\"\n                    inputVariant=\"outlined\"\n                    cancelLabel=\"Peruuta\"\n                    ampm={false}\n                    value={lopetus}\n                    onChange={setLopetus}\n                    disableFuture={true}\n                    format=\"d.M.y HH:mm\"\n                    style={{marginBottom: 10,\n                            float: \"right\",\n                            width: \"49%\"}}\n                />\n\n                {/* Retkeilyalueen nimi, retkireitti sekä kuljettu matka syötetään TextField-kenttiin */}\n                <TextField \n                        label=\"Retkeilyalueen nimi\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        inputRef={paikkakentta}\n                        style={{marginBottom : 10}}\n                />\n                <TextField \n                        label=\"Reitti\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        inputRef={reittikentta}\n                        style={{marginBottom : 10}}\n                />\n                <TextField \n                        label=\"Kuljettu matka / km\"\n                        type=\"number\"\n                        variant=\"outlined\"\n                        inputRef={kmkentta}\n                        style={{marginBottom : 10, width : \"49%\"}}\n                />\n\n                {/* Kuva valitaan tässä versiossa valmiista vaihtoehdoista */}\n                <FormControl className={tyylit.valikko}>\n                    <InputLabel style={{marginLeft: \"14px\"}}>Valitse kuva</InputLabel>\n                        <Select\n                            inputRef={kuvanValinta}\n                            variant=\"outlined\">\n                            <MenuItem value={karitunturi}>Karitunturi</MenuItem>\n                            <MenuItem value={leivonmaki}>Leivonmäki</MenuItem>\n                            <MenuItem value={lemmenjoki}>Lemmenjoki</MenuItem>\n                            <MenuItem value={liesjarvi}>Liesjärvi</MenuItem>\n                            <MenuItem value={martimoaapa}>Martimoaapa</MenuItem>\n                            <MenuItem value={pienikarhu}>Pieni karhunkierros</MenuItem>\n                            <MenuItem value={repovesi}>Repovesi</MenuItem>\n                            <MenuItem value={riisitunturi}>Riisitunturi</MenuItem>\n                            <MenuItem value={salamajarvi}>Salamajärvi</MenuItem>\n                            <MenuItem value={syote}>Syöte</MenuItem>\n                        </Select>\n                </FormControl>\n\n                {/* Käyttäjä arvostelee retken 1-5 tähdellä */}\n                <Box\n                    component=\"fieldset\"\n                    borderColor=\"transparent\">\n                    \n                    <Typography component=\"legend\">Arvostele retki</Typography>\n                    <Rating \n                        name=\"simple-controlled\"\n                        value={tahdet}\n                        onChange={(e, arvostelu) => { setTahdet(arvostelu); }}\n                    />\n                </Box>\n\n                {/* Napin painaminen käynnistää lomakekäsittelijän */}\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\" \n                    fullWidth\n                    style={{marginBottom : 10}}\n                    >Lisää uusi retki\n                </Button>\n\n            </form>\n        </MuiPickersUtilsProvider>\n    )\n}\n\nexport default LisaaRetki;","import { Button, ListItem, List, ListItemText } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { format } from 'date-fns';\n\n// Näkymässä näytetään yksittäisen retken kaikki tiedot\n\nfunction RetkenTiedot(props) {\n\n    return (\n        <List>\n            <ListItem>\n                <ListItemText\n                    primary={` ${props.lisatiedot.reitti}, ${props.lisatiedot.matka} km`}\n                    secondary={` ${format(props.lisatiedot.alku, \"d.M.y, HH:mm\")} – ${format(props.lisatiedot.loppu, \"d.M.y, HH:mm\")} `}/>\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={props.lisatiedot.paikka}\n                    />\n            </ListItem>\n            <ListItem>                  \n                <Rating \n                    name=\"read-only\"\n                    value={props.lisatiedot.tahtia}\n                    readOnly\n                />      \n            </ListItem>\n            <ListItem>\n                <Button \n                    variant=\"contained\"\n                    color=\"primary\" \n                    style={{marginBottom : 10, marginTop : 20}}\n                    onClick={ () => { props.setSivu(\"1\") }}\n                    >Takaisin\n                </Button>\n            </ListItem>\n            <ListItem>\n                <img src={props.lisatiedot.kuva} style={{ width : \"100%\"}} alt={props.lisatiedot.paikka}/>\n            </ListItem>\n        </List>\n    )\n}\n\nexport default RetkenTiedot;","import {AppBar, Tabs, Tab, Container } from '@material-ui/core';\nimport { TabPanel, TabContext } from '@material-ui/lab';\nimport { useState, useEffect } from 'react';\nimport OmatRetket from './components/OmatRetket';\nimport LisaaRetki from './components/LisaaRetki';\nimport RetkenTiedot from './components/RetkenTiedot';\n\n/* Sovelluksessa käyttäjä voi lisätä päiväkirjaan tekemiään retkiä ja tarkastella niiden tietoja, ja lajitella niitä hakukriteerin perusteella.\nTämä sovellus on ajateltu osaksi suurempaa some-kokonaisuutta, jossa käyttäjät voivat lisätä retkiä muiden nähtäväksi ja selata sekä omia, että\nmuiden lisäämiä retkiä ja hakea retkiä eri hakukriteereillä. Tässä versiossa käyttäjä voi syöttää ja tarkastella vain omia retkiä. */\n\nfunction App() {\n\n  const [sivu, setSivu] = useState(\"1\");\n  const [retket, setRetket] = useState([]);\n  const [lisatiedot, setLisatiedot] = useState();\n  const [maakuntaData, setMaakuntaData] = useState();\n\n  const vaihdaSivua = (e, uusiSivu) => {\n    setSivu(uusiSivu);\n  };\n\n  /* Käyttäjät syöttämät tiedot tallennetaan localStorageen, ja ne luetaan aina kun sovellus avataan.\n  Lisäksi joka kerta, kun retket-tilamuuttujan sisältö muuttuu, tiedot tallennetaan uudelleen. */\n\n  const tallennaRetkilista = () => {\n    localStorage.setItem(\"retkilista\", JSON.stringify(retket));\n  }\n\n  const avaaRetkilista = () => {\n    if (localStorage.getItem(\"retkilista\")) {\n      setRetket(JSON.parse(localStorage.getItem(\"retkilista\")));\n    }\n    else {\n      setRetket([]);\n    }\n  }\n\n  useEffect(() => {\n    avaaRetkilista();\n  }, []);\n\n  useEffect(() => {\n    tallennaRetkilista();\n  }, [retket]);\n\n\n  /* Sovelluksessa on kaksi välilehteä. Aloitusnäkymässä käyttäjä näkee syöttämänsä retket ja toisella välilehdellä  voi lisätä\n  retkiä. Sovelluksessa on myös kolmas näkymä, johon yksittäisen retken tiedot saa avattua, mutta jolle ei ole kuitenkaan omaa välilehteä */\n  \n  return (\n\n    <Container maxWidth=\"sm\">\n\n      <TabContext value={sivu}>\n        <AppBar position=\"static\">\n          <Tabs\n            value={sivu}\n            onChange={vaihdaSivua}\n            centered={true}\n          >\n            <Tab label=\"Omat retket\" value=\"1\"/>\n            <Tab label=\"Lisää retki\" value=\"2\"/>\n          </Tabs>\n        </AppBar>\n\n        <TabPanel value=\"1\">\n          <OmatRetket retket={retket} setSivu={setSivu} setLisatiedot={setLisatiedot}/>\n        </TabPanel>   \n\n        <TabPanel value=\"2\">\n          <LisaaRetki retket={retket} setRetket={setRetket} setSivu={setSivu} maakuntaData={maakuntaData}/>\n        </TabPanel>   \n\n        <TabPanel value=\"3\">\n          <RetkenTiedot setSivu={setSivu} lisatiedot={lisatiedot}/>\n        </TabPanel>   \n\n      </TabContext>\n\n    </Container>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fontsource/roboto';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}